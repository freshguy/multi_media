
#include "cv.h"
#include "highgui.h"
#include <stdio.h>
#include <stdlib.h>


IplImage *image = 0;
IplImage *mask;
IplImage *segImage;

CvPoint prev_pt={-1,-1} ;

void on_mouse( int event, int x, int y, int flags, void* param)
{
    
    if( !param )
        return;
    if( event == CV_EVENT_LBUTTONUP || !(flags & CV_EVENT_FLAG_LBUTTON) )
        prev_pt = cvPoint(-1,-1);
    else if( event == CV_EVENT_LBUTTONDOWN )
        prev_pt = cvPoint(x,y);
    else if( event == CV_EVENT_MOUSEMOVE && (flags & CV_EVENT_FLAG_LBUTTON) )
    {
        CvPoint pt = cvPoint(x,y);
        if( prev_pt.x < 0 )
            prev_pt = pt;
        cvLine(mask, prev_pt, pt, cvScalarAll(0), 1, 8, 0 );    //模板上画
        cvLine(param, prev_pt, pt, cvScalarAll(255), 1, 8, 0 ); //源图上画
        prev_pt = pt;
        cvShowImage( "Contour Image", param );  //边画边显示
    }
    if(event == CV_EVENT_RBUTTONUP)
    {
        cvFloodFill(mask, cvPoint(x, y), cvScalarAll(0));
		
		cvSaveImage("maskImg.bmp", mask);
        IplImage *segImage=cvCreateImage(cvGetSize(param),8,1);
		cvZero(segImage);
        cvCopy(param,segImage, mask);             //使用模板拷贝
        cvShowImage( "Contour Image", segImage ); //显示抠图结果
        cvSaveImage("segImage.bmp",segImage);//保存抠图结果
        //cvReleaseImage(&segImage);
    }
}

IplImage *img = 0, *inpainted = 0;
int main(int argc, char* argv[]) {
  image = cvLoadImage(argv[1], 0) ;  //载入图像
   cvNamedWindow( "image", 1 );
  img = cvCloneImage(image);
  inpainted = cvCloneImage(image);
  mask = cvCreateImage(cvGetSize(img), 8, 1);
  //cvZero(mask);
  //cvZero(inpainted);
  cvShowImage( "image", image);
  cvShowImage("wtershed transform", inpainted);
  cvSetMouseCallback( "Origin gray Image", on_mouse, (void*) image);
   cvWaitKey(0);
}
