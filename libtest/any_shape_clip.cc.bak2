
#include "cv.h"
#include "highgui.h"
#include <stdio.h>
#include <stdlib.h>


IplImage* inpaint_mask = 0;
IplImage* img0 = 0, *img = 0, *inpainted = 0;
CvPoint prev_pt = {-1,-1};

void on_mouse( int event, int x, int y, int flags, void* zhang)
{

  printf("event = %d, x = %d, y = %d, flags = %d\n", event, x, y, flags);
  if( event == CV_EVENT_LBUTTONUP || !(flags & CV_EVENT_FLAG_LBUTTON) )
    prev_pt = cvPoint(-1,-1);
  else if( event == CV_EVENT_LBUTTONDOWN )
    prev_pt = cvPoint(x,y);
  else if( event == CV_EVENT_MOUSEMOVE && (flags & CV_EVENT_FLAG_LBUTTON) )
  {
    CvPoint pt = cvPoint(x,y);
    if( prev_pt.x < 0 )
    prev_pt = pt;
    cvLine( inpaint_mask, prev_pt, pt, cvScalarAll(100), 1, 8, 0 );
    cvLine( img, prev_pt, pt, cvScalarAll(100), 1, 8, 0 );
    prev_pt = pt;
    cvShowImage( "image", img );
  }
  if(event == CV_EVENT_LBUTTONUP) {
    printf("LBUTTONUP\n");
        cvFloodFill(inpainted,cvPoint(x,y),cvScalarAll(200));
        IplImage *segImage=cvCreateImage(cvGetSize(img),8,3);;
        cvCopy(img,segImage,inpainted);
        cvCopy(segImage,img);
                cvReleaseImage(&segImage);
        cvDestroyWindow("Key Image");
    }
}

int main( int argc, char** argv )
{

   img0 = cvLoadImage(argv[1]);

   printf( "Hot keys: \n"  
            "\tESC - quit the program\n"  
            "\tr - restore the original image\n"  
            "\ti or ENTER - run inpainting algorithm\n"  
            "\t\t(before running it, paint something on the image)\n");  
   cvNamedWindow( "image", 1 );
   img = cvCloneImage( img0 );
   inpainted = cvCloneImage( img0 );
   inpaint_mask = cvCreateImage( cvGetSize(img), 8, 1 );
   cvZero(inpaint_mask);
   cvZero(inpainted);
   cvShowImage( "image", img );
   cvShowImage( "watershed transform", inpainted );
   cvSetMouseCallback( "image", on_mouse, 0 );
   cvWaitKey(0);

}
