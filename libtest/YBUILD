# Copyright 2013. Juyou Inc. All rights reserved
# Author: wangjuntao@juyou.com (Juntao Wang)
# 
# find opencv's link_flags: pkg-config opencv --cflags --libs
#
# g++ `pkg-config opencv --libs --cflags opencv` sample.c -o sample
#

cc_binary(name = 'find_obj',
      srcs = [
      'find_obj.cpp',
      ],
      deps = [
      ],
      cflags = [
      '-std=gnu++0x',
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      copt = [
      'always_link',
      ],
      link_flags = [
      '/usr/local/lib/libopencv_ts.a',
      '-lopencv_calib3d',
      '-lopencv_contrib',
      '-lopencv_core',
      '-lopencv_features2d',
      '-lopencv_flann',
      '-lopencv_gpu',
      '-lopencv_highgui',
      '-lopencv_imgproc',
      '-lopencv_legacy',
      '-lopencv_ml',
      '-lopencv_nonfree',
      '-lopencv_objdetect',
      '-lopencv_ocl',
      '-lopencv_photo',
      '-lopencv_stitching',
      '-lopencv_superres',
      '-lopencv_video',
      '-lopencv_videostab',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],

      ## OR 
#      link_flags = [
#      '-lopencv_calib3d',
#      '/usr/local/lib/libopencv_*',
#      '-lrt',
#      '-lpthread',
#      '-lm',
#      '-ldl',
#      ],
#
      ## OR
#      link_flags = [
#      '/usr/local/lib/libopencv_calib3d.so',
#      '/usr/local/lib/libopencv_contrib.so',
#      '/usr/local/lib/libopencv_core.so',
#      '/usr/local/lib/libopencv_features2d.so',
#      '/usr/local/lib/libopencv_flann.so',
#      '/usr/local/lib/libopencv_gpu.so',
#      '/usr/local/lib/libopencv_highgui.so',
#      '/usr/local/lib/libopencv_imgproc.so',
#      '/usr/local/lib/libopencv_legacy.so',
#      '/usr/local/lib/libopencv_ml.so',
#      '/usr/local/lib/libopencv_nonfree.so',
#      '/usr/local/lib/libopencv_objdetect.so',
#      '/usr/local/lib/libopencv_ocl.so',
#      '/usr/local/lib/libopencv_photo.so',
#      '/usr/local/lib/libopencv_stitching.so',
#      '/usr/local/lib/libopencv_superres.so',
#      '/usr/local/lib/libopencv_ts.a',
#      '/usr/local/lib/libopencv_video.so',
#      '/usr/local/lib/libopencv_videostab.so',
#      '-lrt',
#      '-lpthread',
#      '-lm',
#      '-ldl',
#      ],
)

cc_binary(name = 'DisplayImage',
      srcs = [
      'DisplayImage.cpp',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'rotate_scale',
      srcs = [
      'rotate_scale.cc',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'video_frame_play',
      srcs = [
      'video_frame_play.cc',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'mouse_paint',
      srcs = [
      'mouse_paint.cc',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'scale_cvResize',
      srcs = [
      'scale_cvResize.cc',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'face_detect',
      srcs = [
      'face_detect.cc',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'reduce_backgroud',
      srcs = [
      'reduce_backgroud.cc',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'meanshift_segmentation',
      srcs = [
      'meanshift_segmentation.cpp',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'any_shape_clip',
      srcs = [
      'any_shape_clip.cc',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'squares',
      srcs = [
      'squares.cpp',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'contours',
      srcs = [
      'contours.c',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'grabcut',
      srcs = [
      'grabcut.cpp',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'watershed',
      srcs = [
      'watershed.cpp',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'multi_edge',
      srcs = [
      'multi_edge.cc',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'flip_image',
      srcs = [
      'flip_image.cc',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'rotate_zoom',
      srcs = [
      'rotate_zoom.cc',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'rotate_zoom1',
      srcs = [
      'rotate_zoom1.cc',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)

cc_binary(name = 'rotate_autoresize',
      srcs = [
      'rotate_autoresize.cc',
      ],
      deps = [
      ],
      cflags = [
      '-I/usr/local/include/opencv',
      '-I/usr/local/include',
      ],
      link_flags = [
      '-lopencv_calib3d',
      '/usr/local/lib/libopencv_*',
      '-lrt',
      '-lpthread',
      '-lm',
      '-ldl',
      ],
)
